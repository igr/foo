// pulsing animation
// @include a-pulse(0.5, 5s, 4);

@mixin a-pulse(
  $name,
  $scale,
  $time,
  $iterations,
  $shadowWidth,
  $shadowIncrease
) {
  @if (not(type-of($scale) == number)) {
    @error "`#{$scale}` needs to be a number.";
  }
  @if (type-of($time) == number) {
    @if (unit($time) != 's') {
      @if (unit($time) != 'ms') {
        @error "`#{$time}` needs to be s or ms.";
      }
    }
  } @else {
    @error "`#{$time}` needs to be a number.";
  }
  @if (not(type-of($iterations) == number)) {
    @error "`#{$iterations}` needs to be a number.";
  }
  @if (type-of($shadowWidth) == number) {
    @if (unit($shadowWidth) != 'px') {
      @error "`#{$shadowWidth}` needs to be px";
    }
  } @else {
    @error "`#{$shadowWidth}` needs to be a number.";
  }
  @if (not(type-of($shadowIncrease) == number)) {
    @error "`#{$shadowIncrease}` needs to be a number.";
  }
  @if (type-of($time) == number) {
    @if (unit($time) != 's') {
      @if (unit($time) != 'ms') {
        @error "`#{$time}` needs to be s or ms.";
      }
    }
  } @else {
    @error "`#{$time}` needs to be a number.";
  }

  animation: #{$name} $time forwards;
  animation-iteration-count: $iterations;
  animation-timing-function: cubic-bezier(0.455, 0.03, 0.515, 0.955);

  @keyframes #{$name} {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale($scale);
    }
    100% {
      box-shadow: 0 0 $shadowWidth $shadowWidth * $shadowIncrease
        rgba(81, 81, 81, 0);
      transform: scale(1);
    }
  }
}
